package org.fosstrak.ale.wsdl.alelr.epcglobal;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 2.6.1
 * 2019-01-25T13:11:16.878+08:00
 * Generated source version: 2.6.1
 * 
 */
@WebService(targetNamespace = "urn:epcglobal:alelr:wsdl:1", name = "ALELRServicePortType")
@XmlSeeAlso({org.fosstrak.ale.xsd.epcglobal.ObjectFactory.class, ObjectFactory.class, org.fosstrak.ale.xsd.ale.epcglobal.ObjectFactory.class})
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
public interface ALELRServicePortType {

    @WebMethod
    @WebResult(name = "GetLogicalReaderNamesResult", targetNamespace = "urn:epcglobal:alelr:wsdl:1", partName = "getLogicalReaderNamesReturn")
    public ArrayOfString getLogicalReaderNames(
        @WebParam(partName = "parms", name = "GetLogicalReaderNames", targetNamespace = "urn:epcglobal:alelr:wsdl:1")
        EmptyParms parms
    ) throws SecurityExceptionResponse, ImplementationExceptionResponse;

    @WebMethod
    @WebResult(name = "GetLRSpecResult", targetNamespace = "urn:epcglobal:alelr:wsdl:1", partName = "getLRSpecReturn")
    public org.fosstrak.ale.xsd.ale.epcglobal.LRSpec getLRSpec(
        @WebParam(partName = "parms", name = "GetLRSpec", targetNamespace = "urn:epcglobal:alelr:wsdl:1")
        GetLRSpec parms
    ) throws NoSuchNameExceptionResponse, SecurityExceptionResponse, ImplementationExceptionResponse;

    @WebMethod
    @WebResult(name = "DefineResult", targetNamespace = "urn:epcglobal:alelr:wsdl:1", partName = "defineReturn")
    public DefineResult define(
        @WebParam(partName = "parms", name = "Define", targetNamespace = "urn:epcglobal:alelr:wsdl:1")
        Define parms
    ) throws DuplicateNameExceptionResponse, SecurityExceptionResponse, ValidationExceptionResponse, ImplementationExceptionResponse;

    @WebMethod
    @WebResult(name = "GetStandardVersionResult", targetNamespace = "urn:epcglobal:alelr:wsdl:1", partName = "getStandardVersionReturn")
    public java.lang.String getStandardVersion(
        @WebParam(partName = "parms", name = "GetStandardVersion", targetNamespace = "urn:epcglobal:alelr:wsdl:1")
        EmptyParms parms
    ) throws ImplementationExceptionResponse;

    @WebMethod
    @WebResult(name = "GetVendorVersionResult", targetNamespace = "urn:epcglobal:alelr:wsdl:1", partName = "getVendorVersionReturn")
    public java.lang.String getVendorVersion(
        @WebParam(partName = "parms", name = "GetVendorVersion", targetNamespace = "urn:epcglobal:alelr:wsdl:1")
        EmptyParms parms
    ) throws ImplementationExceptionResponse;

    @WebMethod
    @WebResult(name = "GetPropertyValueResult", targetNamespace = "urn:epcglobal:alelr:wsdl:1", partName = "getPropertyValueReturn")
    public java.lang.String getPropertyValue(
        @WebParam(partName = "parms", name = "GetPropertyValue", targetNamespace = "urn:epcglobal:alelr:wsdl:1")
        GetPropertyValue parms
    ) throws NoSuchNameExceptionResponse, SecurityExceptionResponse, ImplementationExceptionResponse;

    @WebMethod
    @WebResult(name = "UndefineResult", targetNamespace = "urn:epcglobal:alelr:wsdl:1", partName = "undefineReturn")
    public UndefineResult undefine(
        @WebParam(partName = "parms", name = "Undefine", targetNamespace = "urn:epcglobal:alelr:wsdl:1")
        Undefine parms
    ) throws InUseExceptionResponse, NoSuchNameExceptionResponse, ImmutableReaderExceptionResponse, SecurityExceptionResponse, ImplementationExceptionResponse;

    @WebMethod
    @WebResult(name = "AddReadersResult", targetNamespace = "urn:epcglobal:alelr:wsdl:1", partName = "addReadersReturn")
    public AddReadersResult addReaders(
        @WebParam(partName = "parms", name = "AddReaders", targetNamespace = "urn:epcglobal:alelr:wsdl:1")
        AddReaders parms
    ) throws NoSuchNameExceptionResponse, SecurityExceptionResponse, ImplementationExceptionResponse, InUseExceptionResponse, NonCompositeReaderExceptionResponse, ImmutableReaderExceptionResponse, ReaderLoopExceptionResponse, ValidationExceptionResponse;

    @WebMethod
    @WebResult(name = "SetReadersResult", targetNamespace = "urn:epcglobal:alelr:wsdl:1", partName = "setReadersReturn")
    public SetReadersResult setReaders(
        @WebParam(partName = "parms", name = "SetReaders", targetNamespace = "urn:epcglobal:alelr:wsdl:1")
        SetReaders parms
    ) throws NoSuchNameExceptionResponse, SecurityExceptionResponse, ImplementationExceptionResponse, InUseExceptionResponse, NonCompositeReaderExceptionResponse, ImmutableReaderExceptionResponse, ReaderLoopExceptionResponse, ValidationExceptionResponse;

    @WebMethod
    @WebResult(name = "RemoveReadersResult", targetNamespace = "urn:epcglobal:alelr:wsdl:1", partName = "removeReadersReturn")
    public RemoveReadersResult removeReaders(
        @WebParam(partName = "parms", name = "RemoveReaders", targetNamespace = "urn:epcglobal:alelr:wsdl:1")
        RemoveReaders parms
    ) throws NoSuchNameExceptionResponse, SecurityExceptionResponse, ImplementationExceptionResponse, InUseExceptionResponse, NonCompositeReaderExceptionResponse, ImmutableReaderExceptionResponse;

    @WebMethod
    @WebResult(name = "UpdateResult", targetNamespace = "urn:epcglobal:alelr:wsdl:1", partName = "updateReturn")
    public UpdateResult update(
        @WebParam(partName = "parms", name = "Update", targetNamespace = "urn:epcglobal:alelr:wsdl:1")
        Update parms
    ) throws NoSuchNameExceptionResponse, SecurityExceptionResponse, ImplementationExceptionResponse, InUseExceptionResponse, ImmutableReaderExceptionResponse, ReaderLoopExceptionResponse, ValidationExceptionResponse;

    @WebMethod
    @WebResult(name = "SetPropertiesResult", targetNamespace = "urn:epcglobal:alelr:wsdl:1", partName = "setPropertiesReturn")
    public SetPropertiesResult setProperties(
        @WebParam(partName = "parms", name = "SetProperties", targetNamespace = "urn:epcglobal:alelr:wsdl:1")
        SetProperties parms
    ) throws NoSuchNameExceptionResponse, SecurityExceptionResponse, ImplementationExceptionResponse, InUseExceptionResponse, ImmutableReaderExceptionResponse, ValidationExceptionResponse;
}
